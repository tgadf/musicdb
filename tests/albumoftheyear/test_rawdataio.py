from musicdb.albumoftheyear import MusicDBIOfrom dbparse import RawDataDirIO, ShuffleDataDirIO, ShuffleArtistDataDirIOimport warningsdef test_shuffleartistdatadirio():    mdbio = MusicDBIO()    saddio = ShuffleArtistDataDirIO(mdbio.rdio, mkDirs=False)    modVal = 0        tsFile = mdbio.rdio.getFilename("ModVal", modVal)    for concatKey, concatType in mdbio.params.concatMap.items():        fileType = concatType.inputName        newFiles = saddio.getNewFiles(modVal=modVal, fileType=fileType, tsFile=None, force=True, verbose=True)        assert isinstance(newFiles, list) and len(newFiles) > 0, "No new files!"                if tsFile.exists():            newFiles = saddio.getNewFiles(modVal=modVal, fileType=fileType, tsFile=tsFile, force=False, verbose=True)            assert isinstance(newFiles, list), "Return value is not a list!"        else:            warnings.warn(f"File {tsFile} does not exist!")def test_shuffledatadirio():    mdbio = MusicDBIO()    sddio = ShuffleDataDirIO(mdbio.rdio, mkDirs=False)    modVal = 0        tsFile = mdbio.rdio.getFilename("ModVal", modVal)    for concatKey, concatType in mdbio.params.concatMap.items():        fileType = concatType.inputName        newFiles = sddio.getNewFiles(modVal=modVal, fileType=fileType, tsFile=None, force=True, verbose=True)        assert isinstance(newFiles, list) and len(newFiles) > 0, "No new files!"                if tsFile.exists():            newFiles = sddio.getNewFiles(modVal=modVal, fileType=fileType, tsFile=tsFile, force=False, verbose=True)            assert isinstance(newFiles, list), "Return value is not a list!"        else:            warnings.warn(f"File {tsFile} does not exist!")               def test_rawdatadirio():    mdbio = MusicDBIO()    rddio = RawDataDirIO(mdbio.rdio, mkDirs=False)            tsFile = mdbio.rdio.getFilename("ModVal", 0)    for parseKey, parseType in mdbio.params.parseMap.items():        fileType = parseType.inputName        fileType = parseType.inputName        newFiles = rddio.getNewFiles(modVal=0, fileType=fileType, tsFile=None, force=True, verbose=True)        assert isinstance(newFiles, list) and len(newFiles) > 0, "No new files!"                if tsFile.exists():            newFiles = rddio.getNewFiles(modVal=0, fileType=fileType, tsFile=tsFile, force=False, verbose=True)            assert isinstance(newFiles, list), "Return value is not a list!"        else:            warnings.warn(f"File {tsFile} does not exist!") if __name__ == "__main__":    test_rawdatadirio()    test_shuffledatadirio()    test_shuffleartistdatadirio()    